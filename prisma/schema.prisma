// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Post {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title     String
  content   String?  @db.Text
}

model User {
  id       String @id @default(uuid())
  name     String
  email    String @unique
  password String
  role     Role   @default(USER)
}

model Student {
  id              String         @id @default(uuid())
  firstName       String
  lastName        String
  birthDate       DateTime
  gender          Gender         @default(FEMALE)
  height          Float?
  weight          Float?
  active          Boolean        @default(true)
  inscriptionDate DateTime
  address         Address?
  communication   Communication?
  promotion       Promotion[]
  tuition         Tuition[]
}

model Address {
  id             String  @id @default(uuid())
  lineOne        String
  lineTwo        String?
  exteriorNumber String
  interiorNumber String?
  suburb         String
  municipality   String
  zipCode        String
  student        Student @relation(fields: [studentId], references: [id])
  studentId      String  @unique
}

model Communication {
  id        String  @id @default(uuid())
  phone     String?
  cellPhone String?
  email     String  @unique
  student   Student @relation(fields: [studentId], references: [id])
  studentId String  @unique
}

model Promotion {
  id        String   @id @default(uuid())
  date      DateTime @default(now())
  rank      Rank     @default(BLANCA)
  student   Student  @relation(fields: [studentId], references: [id])
  studentId String
}

model Tuition {
  id        String   @id @default(uuid())
  date      DateTime @default(now())
  amount    Float
  month     Int
  year      Int
  student   Student  @relation(fields: [studentId], references: [id])
  studentId String
}

enum Role {
  SUPER_ADMIN
  ADMIN
  USER
}

enum Gender {
  FEMALE
  MALE
  OTHER
}

enum Rank {
  BLANCA
  AMARILLA
  NARANJA
  VERDE
  AZUL
  MORADA
  CAFE
  ROJA
  NEGRA
  DAN_1
  DAN_2
  DAN_3
  DAN_4
  DAN_5
  DAN_6
  DAN_7
  DAN_8
  DAN_9
  DAN_10
}
